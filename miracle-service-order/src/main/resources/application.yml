server:
  port: ${PROT:16001}
spring:
  application:
    name: miracle-service-order
  datasource:
    druid:
      url: ${MYSQL_URL:jdbc:mysql://localhost:3306/miracle_order?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai}
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: root
      password: root
      initial-size: 5
      minIdle: 5  #最小连接数量
      maxActive: 20 #最大连接数量
      maxWait: 10000  #获取连接最大等待时间，毫秒
      testOnBorrow: true #申请连接时检测连接是否有效
      testOnReturn: false #归还连接时检测连接是否有效
      timeBetweenEvictionRunsMillis: 60000 #配置间隔检测连接是否有效的时间（单位是毫秒）
      minEvictableIdleTimeMillis: 300000  #连接在连接池的最小生存时间（毫秒）
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: true
    hibernate:
      ddl-auto: update
  #---rabbitmq---
  rabbitmq:
    username: guest
    password: guest
    addresses: 127.0.0.1:5672
    #开启发送失败返回
    publisher-returns: true
    #开启发送确认
    publisher-confirms: true
    listener:
      simple:
        #指定最小的消费者数量
        concurrency: 1
        max-concurrency: 2
        acknowledge-mode: manual
        retry:
          enabled: true
          max-attempts: 2
          initial-interval: 2000
    #支持消息的确认与返回
    template:
      mandatory: true
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 30
    service-url:
      defaultZone: ${EUREKA_SERVER:http://admin:12345@127.0.0.1:10001/eureka,http://admin:12345@127.0.0.1:10002/eureka}
  instance:
    prefer-ip-address: true
    hostname: 127.0.0.1
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port} #指定实例id
    lease-renewal-interval-in-seconds: 10 #Client发给Server的心跳频率
    lease-expiration-duration-in-seconds: 10 #Server收到上一次心跳时间之后，等待下一次心跳的超时时间。如果在时间内没有收到，则进行服务剔除
# ---miracle---
miracle:
  work:
    workerId: 1
    dataCenterId: 9
#---redisson---
#集群模式
#redisson:
#  client-name: myclient
#  password:
#  node-addresses: redis://192.168.1.103:7000,redis://192.168.1.103:7001,redis://192.168.1.103:7002,redis://192.168.1.103:7003,redis://192.168.1.103:7004,redis://192.168.1.103:7005
redisson:
  address: redis://106.12.150.85:6789
  password: ai_redis